{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","correctList","num","arr","i","push","list","Math","ceil","firstItem","lastItem","length","className","classNames","disabled","href","onClick","map","item","active","options","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","start","end","correctItems","slice","id","value","onChange","event","target","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAYA,IAAMC,EAVN,SAAcC,GAGZ,IAFA,IAAMC,EAAM,GAEHC,EAAI,EAAGA,GAAKF,EAAKE,GAAK,EAC7BD,EAAIE,KAAKD,GAGX,OAAOD,EAGWG,CAAKC,KAAKC,KAAKX,EAAQC,IACrCW,EAAYR,EAAY,GACxBS,EAAWT,EAAYA,EAAYU,OAAS,GAkBlD,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UACEC,IAAW,YAAa,CACtBC,SAAUf,IAAgBU,IAHhC,SAOE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAehB,IAAgBU,EAC/BO,QAAS,kBAAYjB,IArBfU,EACHA,EAGFT,EAAaD,EAAc,IAY9B,oBAUDE,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAEEN,UACEC,IAAW,YAAa,CACtBM,OAAQpB,IAAgBmB,IAJ9B,SAQE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMhB,GAAckB,IAJ/B,SAMGA,KAbEA,MAiBT,oBACEN,UACEC,IAAW,YAAa,CACtBC,SAAUf,IAAgBW,IAHhC,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAehB,IAAgBW,EAC/BM,QAAS,kBAAWjB,IAjEdW,EACHA,EAGFV,EAAaD,EAAc,IAwD9B,wBCpFFqB,EAAU,CAAC,EAAG,EAAG,GAAI,IAErBC,ECTC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQnB,KAAKoB,GAGf,OAAOD,EDEKE,CAAW,EAHN,IAIhBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO9B,EAAP,KAAgB+B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoB+B,EAApB,KAEMC,GAAShC,EAAc,GAAKD,EAC5BkC,GAAOjC,EAAc,GAAKD,EAAUA,EAXzB,OAaZC,EAAc,GAAKD,EAAUA,EAE5BmC,EAAeZ,EAAMa,MAAMH,EAAOC,GAExC,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiCgC,EAAQ,EADzC,cACgDC,EADhD,eAC0DX,EAAMV,OADhE,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOtC,EACPuC,SAAW,SAAAC,GACTT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,IAPnB,SAUGV,EAAQH,KAAI,SAAAuB,GAAM,OACjB,wBAAQJ,MAAOI,EAAf,SACGA,WAMT,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEf,MAAOwB,EAAMV,OACbb,QAASA,EACTC,YAAaA,EACbC,aAAc8B,IAGhB,6BACGG,EAAahB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YE9DnBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.55952bfd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (num: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  function list(num: number): number[] {\n    const arr = [];\n\n    for (let i = 1; i <= num; i += 1) {\n      arr.push(i);\n    }\n\n    return arr;\n  }\n\n  const correctList = list(Math.ceil(total / perPage));\n  const firstItem = correctList[0];\n  const lastItem = correctList[correctList.length - 1];\n\n  function plus(num :number) {\n    if (num === lastItem) {\n      return lastItem;\n    }\n\n    return onPageChange(currentPage + 1);\n  }\n\n  function minus(num :number) {\n    if (num === firstItem) {\n      return firstItem;\n    }\n\n    return onPageChange(currentPage - 1);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={\n          classNames('page-item', {\n            disabled: currentPage === firstItem,\n          })\n        }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === firstItem}\n          onClick={() => minus(currentPage)}\n        >\n          «\n        </a>\n      </li>\n      {correctList.map(item => (\n        <li\n          key={item}\n          className={\n            classNames('page-item', {\n              active: currentPage === item,\n            })\n          }\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={() => onPageChange(+item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n      <li\n        className={\n          classNames('page-item', {\n            disabled: currentPage === lastItem,\n          })\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastItem}\n          onClick={() => plus(currentPage)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\nconst lastNumber = 42;\nconst options = [3, 5, 10, 20];\n\nconst items = getNumbers(1, lastNumber)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const start = (currentPage - 1) * perPage;\n  const end = (currentPage - 1) * perPage + perPage > lastNumber\n    ? lastNumber\n    : (currentPage - 1) * perPage + perPage;\n\n  const correctItems = items.slice(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            })}\n          >\n            {options.map(option => (\n              <option value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {correctItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}